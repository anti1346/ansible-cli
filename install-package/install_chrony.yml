---
- name: Chrony 설치 및 구성
  hosts: all
  become: yes
  gather_facts: true

  tasks:
    - name: Chrony 설치
      package:
        name: chrony
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS'

    - name: chrony.conf 생성
      template:
        src: "{{ playbook_dir }}/sourcedir/chrony/chrony.conf.j2"
        dest: "{{ '/etc/chrony.conf' if ansible_distribution == 'CentOS' else '/etc/chrony/chrony.conf' }}"
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS'

    - name: Chrony 서비스 재시작
      service:
        name: chronyd
        state: restarted
      when: ansible_distribution in ['Ubuntu', 'CentOS']

    # - name: 재시작 후 Chrony 구성 확인
    #   command:
    #     cmd: "systemctl restart chronyd"
    #   when: ansible_distribution in ['Ubuntu', 'CentOS']

    - name: Chrony 소스 확인
      command:
        cmd: "chronyc sources -v"
      when: ansible_distribution in ['Ubuntu', 'CentOS']
      register: chrony_sources_result

    - name: Chrony 소스 결과
      debug:
        var: chrony_sources_result.stdout_lines
      when: ansible_distribution in ['Ubuntu', 'CentOS']


###
# ansible-inventory -i inventory/hosts.ini --graph
#
# ansible-playbook -i inventory/hosts.ini check-icmp-ping.yml --limit ubuntu22
# 
# ansible-playbook -i inventory/hosts.ini install-package/install_chrony.yml --limit centos7,ubuntu2204
