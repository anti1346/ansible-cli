---
- name: Nginx 설치 및 구성
  hosts: all
  become: yes
  gather_facts: true

  tasks:
    - name: gnupg 설치하기
      ansible.builtin.package:
        name: gnupg
        state: present
      when: ansible_distribution == 'Ubuntu'
      tags:
        - install_nginx

    # - name: Nginx 리포지토리 키 다운로드
    # # curl -fsSL https://nginx.org/keys/nginx_signing.key -o /tmp/nginx_signing.key
    #   get_url:
    #     url: https://nginx.org/keys/nginx_signing.key
    #     dest: /tmp/nginx_signing.key
    #   when: ansible_distribution == 'Ubuntu'
    #   tags:
    #     - install_nginx

    # - name: Nginx 리포지토리 키 추가
    #   ansible.builtin.command: 
    #     cmd: "apt-key add /tmp/nginx_signing.key"
    #   when: ansible_distribution == 'Ubuntu'
    #   tags:
    #     - install_nginx

    # - name: Nginx 리포지토리 키 파일 제거하기
    #   ansible.builtin.file:
    #     path: /tmp/nginx_signing.key
    #     state: absent
    #   when: ansible_distribution == 'Ubuntu'
    #   tags:
    #     - install_nginx

    - name: Nginx 설치
      package:
        name: nginx
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS'
      tags:
        - install_nginx

    - name: Nginx 리포지토리 생성
      template:
        src: "{{ playbook_dir }}/sourcedir/nginx/nginx_repo.j2"
        dest: "{{ nginx_repo_path }}"
      vars:
        nginx_repo_path: "{{ '/etc/apt/sources.list.d/nginx.list' if ansible_distribution == 'Ubuntu' else '/etc/yum.repos.d/nginx.repo' }}"
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS'
      tags:
        - install_nginx

    - name: 패키지 캐시 새로 고침
      command:
        cmd: "{{ 'apt-get update' if ansible_distribution == 'Ubuntu' else 'yum makecache' }}"
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS'
      tags:
        - install_nginx

    - name: Nginx 기본 구성 복사(nginx.conf)
      template:
        src: "{{ playbook_dir }}/sourcedir/nginx/nginx.conf.j2"
        dest: /etc/nginx/nginx.conf
      tags:
        - configure_nginx

    - name: Nginx 기본 구성 복사(conf.d/default.conf)
      template:
        src: "{{ playbook_dir }}/sourcedir/nginx/default.conf.j2"
        dest: /etc/nginx/conf.d/default.conf
      tags:
        - configure_nginx

    - name: Nginx 구성 확인
      command:
        cmd: "nginx -t"
      register: nginx_check_result
      changed_when: false
      tags:
        - check_nginx_configuration

    - name: Debug Nginx Check Result
      debug:
        var: nginx_check_result.stderr_lines[1]
      tags:
        - debug_nginx_check_result

    - name: 구성이 유효한 경우 Nginx 재시작하기
      service:
        name: nginx
        state: started
      when: "'nginx: configuration file /etc/nginx/nginx.conf test is successful' in nginx_check_result.stderr_lines[1]"
      notify:
        - Reload Nginx
      tags:
        - restart_nginx

    - name: curl을 사용하여 Nginx 상태 확인
      shell:
        cmd: "curl http://localhost/basic_status"
      register: curl_result
      ignore_errors: true
      tags:
        - verify_nginx_status

    - name: curl 결과 디버그
      debug:
        var: curl_result.stdout_lines
      tags:
        - verify_nginx_status

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: restarted
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS'
      tags:
        - reload_nginx


###
# ansible-inventory -i inventory/hosts.ini --graph
#
# ansible-playbook -i inventory/hosts.ini check-icmp-ping.yml --limit ubuntu22
# 
# ansible-playbook -i inventory/hosts.ini install-package/install_nginx.yml --limit ubuntu22,centos7
